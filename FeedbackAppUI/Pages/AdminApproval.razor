@page "/admin"
@attribute [Authorize(Policy = "Admin")]
@inject IFeedbackData feedbackData
@inject IUserData userData
@inject NavigationManager navManager


<h1 class="page-heading text-uppercase mb-4">Pending Submission</h1>
<div class="row">
    <div class="feedbacks-count col-8 mt-2">
        @submissions?.Count Sunmissions
    </div>
    <div class="col-4 close-button-section">
        <button class="btn btn-close" @onclick="ClosePage"></button>
    </div>
</div>

@if (submissions is not null && submissions.Count()>0) {
    foreach (var s in submissions) {
        <div class="row submission">
            <div class="col-lg-2 col-md-3 col-sm-4">

            </div>
            <div class="col-lg-10 col-md-9 col-sm-8">
                <div>
                    <div class="feedback-detail-date">
                        <div>@s.DateCreated.ToString("MM.dd.yyyy")</div>
                    </div>
                    <div class="feedback-detail-text">
                        <div class="fw-bold mb-2 feedback-detail-feedback">@s.Feedback</div>
                        @*                        <div class="mb-2 feedback-detail-author">@feedback.Author.DisplayName</div>
                <div class="mb-2">@feedback.Description</div>*@
                        <div class="feedback-entry-text-vehiclemodel">@s.VehicleModel.VehicleModelName</div>
                    </div>
          
                </div>

                <div>
                 @*   @s.Author.DisplayName*@
                </div>

            </div>
        </div>



    }
}









@code {
    //private UserModel loggedInUser;
    private List<FeedbackModel> submissions;


    protected async override Task OnInitializedAsync() {
        submissions = await feedbackData.GetAllFeedbacksWaitingForConfirmed();

    }
    private async Task ConfirmSubmission(FeedbackModel submission) {
        submission.Confirmed = true;
        submissions.Remove(submission);
        //clear local list.
        await feedbackData.UpdateFeedback(submission);
    }

    private void ClosePage() {
        navManager.NavigateTo("/");
    }
}
